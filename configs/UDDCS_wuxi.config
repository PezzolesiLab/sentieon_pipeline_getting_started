/*
 * Pezzolesi Lab Sentieon Pipeline
 * Author: Scott Frodsham
 * Copyright (c) 2018: none (lol)
*/

// --------------- Config file for a demultiplexing run of the UKS samples --------------
// demux.config

params {
    // Project Name
    project = "UDDCS-WES-WuXi"

    // CPUs
    kp_cpus = 16
    np_cpus = 32

    // Demultiplexing
    isDemuxNeeded = false
    barcodeFile   = ""
    sampleKey     = ""

    // Joint Calling

    // Path to data
    dataDir = "/uufs/chpc.utah.edu/common/home/$USER/projects/eGFR/nextflow_variant_discovery/realData/*.fastq.gz"

    // Default runtime parameters
    complete     = "/scratch/general/lustre/$USER/run-nf"
    fastqc       = "/scratch/general/lustre/$USER/run-nf/results/fastqc"
    fastp        = "/scratch/general/lustre/$USER/run-nf/results/fastp"
    bam          = "/scratch/general/lustre/$USER/run-nf/results/bam"
    bqsr         = "/scratch/general/lustre/$USER/run-nf/results/bqsr"
    stats        = "/scratch/general/lustre/$USER/run-nf/results/bam/stats"
    coverage     = "/scratch/general/lustre/$USER/run-nf/results/bam/coverage"
    gvcf         = "/scratch/general/lustre/$USER/run-nf/results/gvcf"
    vcf          = "/scratch/general/lustre/$USER/run-nf/results/vcf"
    annotatedVCF = "/scratch/general/lustre/$USER/run-nf/results/vcf"
    vcfstats     = "/scratch/general/lustre/$USER/run-nf/results/vcf/stats"
    multiqc      = "/scratch/general/lustre/$USER/run-nf/results/multiqc"

    // Needed reference files
    reference   = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/b37/human_g1k_v37_decoy.fasta"
    indel_mills = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/b37/Mills_and_1000G_gold_standard.indels.b37.vcf"
    indel_1G    = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/b37/1000G_phase1.indels.b37.vcf"
    dbsnp       = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/b37/dbsnp_138.b37.vcf"
    hapmap      = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/b37/hapmap_3.3.b37.vcf"
    omni        = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/b37/1000G_omni2.5.b37.vcf"
    snp_1G      = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/b37/1000G_phase1.snps.high_confidence.b37.vcf"
    bedFile     = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/WES_data/SureSelect_Human_All_Exon_V6_Regions_merge_NOchr_hg19.bed"

    // VQSR default parameters
    indel_mills_par  = 'mills,known=false,training=true,truth=true,prior=12.0'
    indel_1G_par     = '1000G,known=false,training=true,truth=true,prior=10.0'
    hapmap_par       = 'hapmap,known=false,training=true,truth=true,prior=15.0'
    omni_par         = 'omni,known=false,training=true,truth=true,prior=12.0'
    snp_1G_par       = '1000G,known=false,training=true,truth=false,prior=10.0'
}

process {
    errorStrategy = 'terminate'
    executor = 'slurm'
    //clusterOptions = '--account=pezzolesi --partition=kingspeak -n 1 -N 1 -t 01:00:00'
    clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-np -n 1 -N 1 -t 01:00:00'
    scratch = true

    // Specific process specifications

    withName: demuxFq {
        time = '1h'
        // DEPENDENCY: need fastq-multx
    }

    withName: trimReads {
        time = '1h'
        // DEPENDENCY: need at least cutadapt version 1.16 to use the -j flag for multithreading
        //module = 'cutadapt/1.14'
    }
    withName: runFastp {
        time = '1h'
        // DEPENDENCY: need latest fastp (0.19.6) to use the --detect_adapter_for_pe flag (using local intallation)
        //module = 'fastp/0.19.3'
    }

    withName: runFastqc {
        time = '1h'
        module = 'fastqc'
    }

    withName: unzipFastqs {
        time = '1h'
    }

    withName: BWA {
        time = '1h'
        module = 'sentieon/201711.05'
    }

    withName: dedup {
        time = '1h'
        module = 'sentieon/201711.05'
    }

    withName: indelRealigner {
        time = '1h'
        module = 'sentieon/201711.05'
    }

    withName: BQSR {
        time = '1h'
        module = 'sentieon/201711.05'
    }

    withName: graphBQSR {
        time = '1h'
        module = 'sentieon/201711.05'
    }

    withName: samStats {
        time = '1h'
        module = 'samtools/1.7'
    }

    withName: samFlagstat {
        time = '1h'
        module = 'samtools/1.7'
    }

    withName: coverageMetrics {
        time = '1h'
        module = 'sentieon/201711.05'
    }

/*
    withName: haplotyper {
        time = '1h'
        module = 'sentieon/201711.05:bgzip/1.7:tabix/1.7'
    }

    withName: gvcfTyper {
        executor = 'local'
        module = 'sentieon/201711.05'
        cpus = 32
    }

    withName: mergeGVCFs {
        module = 'bcftools/1.7'
        executor = 'local'
        cpus = 32
    }

    withName: varCalSnp {
        executor = 'local'
        module = 'sentieon/201711.05'
        cpus = 32
    }

    withName: applyVarCalSnp {
        executor = 'local'
        module = 'sentieon/201711.05'
        cpus = 32
    }

    withName: varCalIndel {
        executor = 'local'
        module = 'sentieon/201711.05'
        cpus = 32
    }

    withName: applyVarCalIndel {
        executor = 'local'
        module = 'sentieon/201711.05'
        cpus = 32
    }

    withName: finalStats {
        module = 'bcftools/1.7'
        executor = 'local'
        cpus = 32
    }

    withName: annotateFinalVCF {
        // DEPENDENCY: Using annovar to annotate VCF (using local installation of annovar)
        time = '1h'
        executor = 'local'
        cpus = 32
    }
    
    withName: multiqc {
        time = '1h'
        executor = 'local'
        cpus = 32
        // DEPENDENCY: Using multiqc/1.7 because I keep getting an error using the CHPC modules
        //module = 'multiqc/1.5'
        //module = 'python/3.5.2'
    }
*/
}
