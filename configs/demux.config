/*
 * Pezzolesi Lab Sentieon Pipeline
 * Author: Scott Frodsham
 * Copyright (c) 2018: none
*/

// --------------- Config file for a demultiplexing run of the UKS samples --------------
// demux.config
// env.MODULEPATH = '$MODULEPATH:/scratch/ucgd/serial/common/modulefiles/notchpeak.peaks'

params {
    // Project Name (also the name of your final VCF)
    project = "UKS-Plate2"

    // Path to data
    dataDir = "/uufs/chpc.utah.edu/common/home/u6013634/Sentieon_Pipeline/sentieon_pipeline/Fastqs/*.fastq.gz"

    // Demultiplexing
    isDemuxNeeded = true
    barcodeFile   = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/Targeted_NGS_data/comai_barcodes1-96.txt"
    sampleKey     = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/Targeted_NGS_data/UKS.Targeted.NGS.Full.Roster.Key"

    // Targeted or WES data
    isIntervalNeeded = true
    targetedBedFile = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/Targeted_NGS_data/Utah_Kidney_Panel.targeted.b37.bed"
    tiledBedFile = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/Targeted_NGS_data/Utah_Kidney_Panel.tiled.b37.bed"

    // Joint Calling

    // CPUs
    cpus_left = 5
    single_cpus = 1

    // Default runtime parameters
    complete     = "/scratch/general/lustre/$USER/run-node-nf"
    fastqc       = "/scratch/general/lustre/$USER/run-node-nf/results/fastqc"
    fastp        = "/scratch/general/lustre/$USER/run-node-nf/results/fastp"
    bam          = "/scratch/general/lustre/$USER/run-node-nf/results/bam"
    bqsr         = "/scratch/general/lustre/$USER/run-node-nf/results/bqsr"
    stats        = "/scratch/general/lustre/$USER/run-node-nf/results/bam/stats"
    coverage     = "/scratch/general/lustre/$USER/run-node-nf/results/bam/coverage"
    gvcf         = "/scratch/general/lustre/$USER/run-node-nf/results/gvcf"
    vcf          = "/scratch/general/lustre/$USER/run-node-nf/results/vcf"
    annotatedVCF = "/scratch/general/lustre/$USER/run-node-nf/results/vcf"
    vcfstats     = "/scratch/general/lustre/$USER/run-node-nf/results/vcf/stats"
    multiqc      = "/scratch/general/lustre/$USER/run-node-nf/results/multiqc"

    // Needed reference files
    reference   = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/hg38/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna"
    indel_mills = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/hg38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz"
    //indel_1G    = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/hg38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz"
    dbsnp       = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/hg38/dbsnp_146.hg38.vcf.gz"
    hapmap      = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/hg38/hapmap_3.3.hg38.vcf.gz"
    omni        = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/hg38/1000G_omni2.5.hg38.vcf.gz"
    snp_1G      = "/uufs/chpc.utah.edu/common/home/pezzolesi-group1/resources/GATK/hg38/1000G_phase1.snps.high_confidence.hg38.vcf.gz"

    // VQSR default parameters
    indel_mills_par  = 'mills,known=false,training=true,truth=true,prior=12.0'
    //indel_1G_par     = '1000G,known=false,training=true,truth=true,prior=10.0'
    hapmap_par       = 'hapmap,known=false,training=true,truth=true,prior=15.0'
    omni_par         = 'omni,known=false,training=true,truth=true,prior=12.0'
    snp_1G_par       = '1000G,known=false,training=true,truth=false,prior=10.0'
}

process {
    errorStrategy = 'retry'
    maxErrorRetry = 5
    executor = 'slurm'
    clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-shared-np -n 5 --mem=28G -N 1'
    //clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-np -n 1 -N 1 -t 01:00:00'

    scratch = "/scratch/general/lustre/$USER/run-node-nf"

    // Specific process specifications

    withName: demuxFq {
        //clusterOptions = '--account=pezzolesi --partition=notchpeak -n 1 -N 1 -t 02:00:00'
        clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-shared-np -n 26 --mem=144G -N 1'
        time = '2h'
        // DEPENDENCY: need fastq-multx
    }

    withName: trimReads {
        time = '10m'
        // DEPENDENCY: need at least cutadapt version 1.16 to use the -j flag for multithreading
        //module = 'cutadapt/1.14'
    }
    withName: runFastp {
        time = '10m'
        // DEPENDENCY: need latest fastp (0.19.6) to use the --detect_adapter_for_pe flag (using slurm intallation)
        //module = 'fastp/0.19.3'
    }

    withName: runFastqc {
        time = '10m'
        module = 'fastqc'
    }

    withName: unzipFastqs {
        time = '10m'
        clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-shared-np -n 1 --mem=20G -N 1'
    }

    withName: BWA {
        clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-shared-np -n 5 --mem=32G -N 1'
        time = '15m'
        //module = 'sentieon/201711.05'
    }

    withName: dedup {
        time = '10m'
        //module = 'sentieon/201711.05'
    }

    withName: indelRealigner {
        time = '10m'
        //module = 'sentieon/201711.05'
    }

    withName: BQSR {
        time = '10m'
        //module = 'sentieon/201711.05'
    }

    withName: graphBQSR {
        time = '10m'
        //module = 'sentieon/201711.05'
    }

    withName: samStats {
        time = '10m'
        clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-shared-np -n 1 --mem=20G -N 1'
        //module = 'samtools/1.7'
    }

    withName: samFlagstat {
        time = '10m'
        clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-shared-np -n 1 --mem=20G -N 1'
        //module = 'samtools/1.7'
    }

    withName: coverageMetrics {
        time = '10m'
        //module = 'sentieon/201711.05'
    }

    withName: haplotyper {
        time = '10m'
        module = 'bgzip/1.7:tabix/1.7'
    }

    withName: gvcfTyper {
        //executor = 'slurm'
        time = '10h'
        //module = 'sentieon/201711.05'
        //cpus = 32
    }

    withName: mergeGVCFs {
        //module = 'bcftools/1.7'
        //executor = 'slurm'
        time = '10h'
        //cpus = 32
    }

    withName: varCalSnp {
        //executor = 'slurm'
        time = '10h'
        //module = 'sentieon/201711.05'
        //cpus = 32
    }

    withName: applyVarCalSnp {
        //executor = 'slurm'
        time = '10h'
        //module = 'sentieon/201711.05'
        //cpus = 32
    }

    withName: varCalIndel {
        //executor = 'slurm'
        time = '10h'
        //module = 'sentieon/201711.05'
        //cpus = 32
    }

    withName: applyVarCalIndel {
        //executor = 'slurm'
        time = '10h'
        //module = 'sentieon/201711.05'
        //cpus = 32
    }

    withName: finalStats {
        //module = 'bcftools/1.7'
        executor = 'slurm'
        //time = '10h'
        //cpus = 32
    }

    withName: annotateFinalVCF {
        // DEPENDENCY: Using annovar to annotate VCF (using slurm installation of annovar)
        //executor = 'slurm'
        clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-shared-np -n 1 --mem=20G -N 1'
        time = '10h'
        //cpus = 32
    }
    
    withName: multiqc {
        time = '10h'
        clusterOptions = '--account=pezzolesi-np --partition=pezzolesi-shared-np -n 1 --mem=20G -N 1'
        //executor = 'slurm'
        //cpus = 32
        // DEPENDENCY: Using multiqc/1.7 because I keep getting an error using the CHPC modules
        //module = 'multiqc/1.5'
        //module = 'python/3.5.2'
    }
}
